
local player = game:GetService("Players").LocalPlayer
local hId
local position
local maxFishDist = 2000

local function findF()
    hId = nil
    position = player.Character.HumanoidRootPart.CFrame
    for _, mdl in pairs(workspace.FishingSpawns:GetChildren()) do
        if mdl.FishLeft.Value > 0 then
            if (mdl.CFrame.Position - position.Position).Magnitude < maxFishDist then
                hId = mdl
            end
        end
    end
end

local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'legends re:writtern',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    -- Creates a new tab titled Main
    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Keybinds')

LeftGroupBox:AddLabel('Bow/FGS spam'):AddKeyPicker('KeyPicker', {

    Default = 'Z',
    SyncToggleState = false,


    Mode = 'Toggle',

    Text = 'Spam bow/FGS',
    NoUI = false, 


    Callback = function(Value)
    end,
})


task.spawn(function()
    while true do
        wait()

        local state = Options.KeyPicker:GetState()
        if state then
            if player.Character:FindFirstChild("GreatSword") then
                game:GetService("Players").LocalPlayer.PlayerGui.Parkour.Script.FlameGreatSword:FireServer()
                player.Character.GreatSword.SwordScript.FGS:FireServer(player.Character.PrimaryPart.Position + (player.Character.PrimaryPart.CFrame.LookVector*100))
            elseif player.Character:FindFirstChild("Bow") then
                player.Character.Bow.SwordScript.Shoot:FireServer(player.Character.PrimaryPart.Position + (player.Character.PrimaryPart.CFrame.LookVector*100),21)
            elseif player.Character:FindFirstChild("PickAxe") then
                game:GetService("Players").LocalPlayer.Character.PickAxe.SwordScript.Activate:FireServer()
            end
        end

        if Library.Unloaded then break end
    end
end)



local RightGroupbox = Tabs.Main:AddRightGroupbox('Toggles');

RightGroupbox:AddToggle('AutoFish', {
    Text = 'Autofish',
    Default = false, -- Default value (true / false)
    Tooltip = 'toggles autofish on/off',

    Callback = function(Value)
    end
})

Toggles.AutoFish:OnChanged(function()
    while Toggles.AutoFish.Value do
        if player.Character then
            if player.Character:FindFirstChild("HumanoidRootPart") then
                findF()
                if hId then
                    task.wait(2.25)
                    game:GetService("Players").LocalPlayer.PlayerGui.Fish.Ado.catch:FireServer(hId)
                end
            end
        end
    end
end)

RightGroupbox:AddToggle('AutoPickup', {
    Text = 'Auto Pickup',
    Default = false, -- Default value (true / false)
    Tooltip = 'toggles Auto Pickup on/off',

    Callback = function(Value)
    end
})

Toggles.AutoPickup:OnChanged(function()
    while Toggles.AutoPickup.Value do
        task.wait()
        for _,v in pairs(workspace.Drops:GetChildren()) do
            if player.Character then
                if player.Character:FindFirstChild("HumanoidRootPart") then
                    firetouchinterest(v.Touched,player.Character.HumanoidRootPart,0)
                end
            end
        end
    end
end)

RightGroupbox:AddToggle('AutoCounter', {
    Text = 'AutoCounter',
    Default = false, -- Default value (true / false)
    Tooltip = 'toggles AutoCounter on/off',

    Callback = function(Value)
    end
})

Toggles.AutoCounter:OnChanged(function()
    while Toggles.AutoCounter.Value do
        task.wait()
        game:GetService("Players").LocalPlayer.PlayerGui.Parkour.Script.Counter:FireServer()
    end
end)

RightGroupbox:AddToggle('SemiGod', {
    Text = 'Semi Godmode',
    Default = false, -- Default value (true / false)
    Tooltip = 'toggles Semi Godmode on/off',

    Callback = function(Value)
    end
})

Toggles.SemiGod:OnChanged(function()
    while Toggles.SemiGod.Value do
        task.wait()
        game:GetService("Players").LocalPlayer.PlayerGui.Parkour.Script.iFrame:FireServer()
    end
end)

Library:SetWatermarkVisibility(true)


local FrameTimer = tick()
local FrameCounter = 0;
local FPS = 60;

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1;

    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter;
        FrameTimer = tick();
        FrameCounter = 0;
    end;

    Library:SetWatermark(('LinoriaLib demo | %s fps | %s ms'):format(
        math.floor(FPS),
        math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
    ));
end);

Library.KeybindFrame.Visible = true;

Library:OnUnload(function()
    WatermarkConnection:Disconnect()

    print('Unloaded!')
    Library.Unloaded = true
end)

-- UI Settings
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- I set NoUI so it does not show up in the keybinds menu
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'End', NoUI = true, Text = 'Menu keybind' })

Library.ToggleKeybind = Options.MenuKeybind 


ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' })
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')
SaveManager:BuildConfigSection(Tabs['UI Settings'])
ThemeManager:ApplyToTab(Tabs['UI Settings'])
SaveManager:LoadAutoloadConfig()
